#!/usr/bin/env node
// -*- js -*-

/*jshint node: true */
'use strict';

var path = require('path'),
	_ = require('underscore'),
	fQuery = require('fquery'),

	wepp = require('../lib/wepp'),

	pkg = require('../package.json'),
	cli = require('commander')
			.version(pkg.version)
			.option('--inFile [file]', 'source file', null)
			.option('--outFile [file]', 'target file', null)
			.option('--inDir [dir]', 'source directory', null)
			.option('--outDir [dir]', 'target directory', null)
			// .option('--charset [string]', 'source and target file encoding', 'utf-8')
			// .option('--linebreak [int]', 'desired line length in target files', parseInt, -1)
			.option('--no-compression', 'turns off file compression')
			.option('--strip-header', 'strips even header comments in case of compression')
			.option('--size', 'prints file size and zipped file size of processed files')
			.option('--overwrite', 'overwrites already existing targets files')
			.parse(process.argv),

	options = _.pick(cli, 'inFile', 'outFile', 'inDir', 'outDir', 'charset', 'linebreak', 'compression', 'stripHeader', 'size', 'overwrite');

console.log(options);

try {

	if (options.inFile && options.outFile) {

		options.inFile = path.resolve(options.inFile);
		options.outFile = path.resolve(options.outFile);
		wepp.processFile(options, options.inFile, options.outFile);

	} else if (options.inDir && options.outDir) {

		options.inDir = path.resolve(options.inDir);
		options.outDir = path.resolve(options.outDir);
		wepp.processDir(options, options.inDir, options.outDir);

	} else {

		fQuery.error({ method: pkg.name, message: 'either input and output file or input and output directory must be specified' });

	}

} catch (err) {
	process.stdout.write(err.toString());
}
